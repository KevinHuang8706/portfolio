/* Enable automatic dark mode */
html {
  color-scheme: light dark;
}

body {
  max-width: 100ch;
  margin-inline: max(1em, (100% - 100ch) / 2);
  font: 100%/1.5 system-ui;
  background: #f8fafb;
}

h1 {
  color: #333;
}

nav {
  display: flex;
  margin-bottom: 1.5em;
  /*border-bottom: 1px solid oklch(80% 3% 200);*/
  --border-color: oklch(50% 10% 200 / 40%);
  border-bottom: 1px solid var(--border-color);
}

nav a {
  flex: 1;
  padding: 0.5em;
  text-align: center;
  text-decoration: none;
  color: inherit;
}

nav a.current {
  /* Update to use the border color variable */
  border-bottom: 0.4em solid var(--border-color);
  padding-bottom: 0.1em;
}

nav a:hover {
  background-color: color-mix(in oklch, var(--color-accent, oklch(70% 10% 250)), canvas 85%);
  border-bottom: 0.4em solid oklch(54% 19% 250); /* Vibrant blue accent */
  color: oklch(40% 0% 0); /* Darker text on hover */
  transition: all 0.2s ease-in-out;
}

form {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 1em;
  align-items: center;
}

label {
  grid-column: 1;
  justify-self: end;
  padding-right: 1em;
}

input:not([type="submit"]), textarea {
  grid-column: 2;
}

input[type="submit"] {
  grid-column: 1 / -1;
  justify-self: center;
  width: 100%;
}

textarea {
  resize: vertical;
  min-height: 50px;
}

.projects {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  align-items: center;
  gap: 1em;
}

article {
  display: grid;
  grid-template-rows: subgrid;
  grid-row: span 3;
}

h2 {
  margin: 0;
}

h1, h2, h3, h4, h5, h6 {
  line-height: 1.1;
  text-wrap: balance;
  margin-block: 0.5em 0.25em;
}

header {
  text-align: center;
  margin: 2rem 0;
  padding: 2rem;
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}

header h2 {
  font-size: 2.2rem;
  color: #2c3e50;
  margin: 0 0 0.5rem;
}

header p {
  color: #7f8c8d;
  font-size: 1.1rem;
}


section {
  margin: 2rem 0;
  padding: 2rem;
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}

h2 {
  font-size: 1.8rem;
  color: #2c3e50;
  border-bottom: 2px solid #3498db;
  padding-bottom: 0.5rem;
  margin: 0 0 1.5rem;
}

/* Experience Timeline */
article.job {
  position: relative;
  padding: 1.5rem;
  margin: 1.5rem 0;
  border-left: 3px solid #3498db;
  background: #f8fafb;
}

article.job::before {
  content: "▹";
  position: absolute;
  left: -14px;
  top: 1.5rem;
  color: #3498db;
  font-size: 1.4rem;
  background: white;
}

article.job h3 {
  font-size: 1.3rem;
  margin: 0 0 0.5rem;
  color: #2c3e50;
}

article.job p:first-of-type {
  color: #7f8c8d;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}


/* Project Cards */
article.project {
  padding: 1.5rem;
  margin: 1.5rem 0;
  border: 1px solid #ecf0f1;
  border-radius: 8px;
  transition: transform 0.2s ease;
}

article.project:hover {
  transform: translateY(-3px);
}


/* Print Optimization */
@media print {
  section {
    box-shadow: none;
    background: none;
    padding: 0 !important;
  }
  
  article.job {
    border-left: 2px solid #ccc;
    background: none;
  }
  
  header {
    background: none;
  }
}

.color-scheme {
  position: fixed;     /* stick it to the viewport */
  top: 0.5rem;         /* a little distance from the very top */
  right: 1rem;         /* same distance from the right edge */
  z-index: 999;        /* sit above the nav bar */
  font-size: 80%;
  padding: 0.5rem;
  border-radius: 4px;
  background: rgba(255,255,255,0.8);
}

nav {
  padding-top: 2.5rem;
}

/* Dark mode styles using .dark class */
html.dark body {
  background: #1a1e22;
  color: #f8fafb;
}

html.dark h1,
html.dark h2,
html.dark h3,
html.dark h4,
html.dark h5,
html.dark h6 {
  color: #f8fafb;
}

html.dark nav a:hover {
  color: oklch(95% 0% 0);
}

html.dark header {
  background: #2c3e50;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

html.dark header h2 {
  color: #ecf0f1;
}

html.dark header p {
  color: #bdc3c7;
}

html.dark section {
  background: #2c3e50;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

html.dark article.job {
  background: #34495e;
}

html.dark article.job::before {
  background: #2c3e50;
}

html.dark article.job h3 {
  color: #ecf0f1;
}

html.dark article.job p:first-of-type {
  color: #bdc3c7;
}

html.dark article.project {
  border-color: #34495e;
}

html.dark #skills li {
  background: #34495e;
}

html.dark .color-scheme {
  background: rgba(44, 62, 80, 0.8);
}

#profile-stats {
  margin: 2rem 0;
  padding: 1.5rem;
  background: var(--stats-bg, #f8f9fa);
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

#profile-stats dl {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
  margin: 0;
  padding: 0;
}

#profile-stats dt {
  grid-row: 1;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: var(--stats-label, #666);
  margin-bottom: 0.5rem;
}

#profile-stats dd {
  grid-row: 2;
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0;
  color: var(--stats-number, #2c3e50);
}

/* Dark mode styles */
.dark #profile-stats {
  --stats-bg: #2d2d2d;
  --stats-label: #a0a0a0;
  --stats-number: #f8fafb;
}

.dark #profile-stats dl {
  box-shadow: 0 2px 6px rgba(0,0,0,0.3);
}
/* Add these image-specific styles */
.projects article img {
  width: 100%;
  height: 250px; /* Fixed height for consistency */
  object-fit: cover;
  object-position: center;
  border-radius: 4px;
  transition: transform 0.3s ease;
}

.projects article:hover img {
  transform: scale(1.02);
}

/* Maintain existing grid layout */
.projects {
  /* Your existing grid styles preserved */
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  align-items: center;
  gap: 1em;
}

/* Dark mode adjustment */
.dark .projects article img {
  filter: brightness(0.9) contrast(1.1);
}

.project-text {
  display: flex;
  flex-direction: column;
  gap: 0.25em;
}

/* style the year */
.project-text .year {
  color: gray;
  font-family: Baskerville, serif;
  font-variant-numeric: oldstyle-nums;
  margin-top: 0.1em;
}
.swatch{
  display: inline-flex;
  width: 1em;
  aspect-ratio: 1/1;
  background-color: var(--color);
  border-radius: 50%;
}

.legend {
  list-style: none;   
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(9em, 1fr));
  gap: 1em;
  border: 2px solid #b5b2b2;
  padding: 1em;
  margin: 1em;
}

.legend li{
  display: flex;
  align-items: center;
  gap: 0.3em;           /* smaller than the grid gap */
  padding: 0.25em; 
}

.container {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;  /* or center if you like them vertically aligned */
  gap: 1em;
}

.container svg {
  flex: 0 1 auto;
  width: 100%;         /* fill whatever space you can get */
  height: auto;        /* preserve aspect ratio */
  max-width: 20em;
}

.container .legend{
  flex: 1 1 auto;
}

.searchBar {
  /* Fill available width of its parent… */
  width: 100%;
  /* …but no more than about 40 characters (using the “ch” unit)… */
  max-width: 40ch;
  /* Center it if its parent is wider */
  margin: 0.5em auto;
  /* Give it some breathing room */
  padding: 0.5em 1em;
  box-sizing: border-box; /* make padding count inside the width */
  font-size: 1rem;
  font-family: inherit;
}

&:has(path:hover){
  path:not(:hover){
    opacity: 0.5;
  }
}
svg path {
  transition: 300ms;
  cursor: pointer;
}
svg:has(path.selected) path:not(.selected) {
  opacity: 0.5;
}
:root {
  --color-selected: oklch(60% 45% 0);
}

/* Selected slice gets a uniform, overriding fill */
svg path.selected {
  fill: var(--color-selected) !important;
  opacity: 1 !important;
}
ul.legend li.selected {
  --color: var(--color-selected) !important;
}

#stats {
  margin: 0.1rem 0;
  padding: 0.75rem;
  background: var(--stats-bg, #f8f9fa);
  /*border-radius: 1px;*/
  /*box-shadow: 0 2px 6px rgba(0,0,0,0.1);*/
}

#stats dl {
  display: grid;
  /* fill columns left→right */
  grid-auto-flow: column;
  /* two rows: labels on top, values on bottom */
  grid-template-rows: auto auto;
  /* vertical gap between DT and DD, horizontal gap between stats */
  gap: 0.25rem 1.5rem;
}

#stats dt {
  grid-row: 1;
  font-size: 0.85rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: var(--stats-label, #666);
  margin-bottom: 0.1rem;
}

#stats dd {
  grid-row: 2;
  font-size: 1.3rem;
  font-weight: 600;
  margin: 0;
  color: var(--stats-number, #2c3e50);
}

/* Dark‐mode overrides */
html.dark #stats {
  --stats-bg: #2d2d2d;
  --stats-label: #a0a0a0;
  --stats-number: #f8fafb;
  box-shadow: 0 2px 6px rgba(0,0,0,0.3);
}

dl.info {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 0.25em 1em;
  margin: 0;
  padding: 0.5em 1em;
  background: rgba(255, 255, 255, 0.9);
  color: #333;
  border-radius: 6px;
  box-shadow: 0 2px 12px rgba(0,0,0,0.15);
  font-size: 0.9rem;
  transition: opacity 200ms ease, visibility 200ms ease;
}

/* hide when [hidden], but allow immediate show if hovered/focused */
dl.info[hidden]:not(:hover):not(:focus-within) {
  opacity: 0;
  visibility: hidden;
}

#commit-tooltip {
  position: absolute;
  background: white;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 10px;
  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.3);
  z-index: 100;
  pointer-events: none;
  display: none;
}

.tooltip {
  font-size: 12px;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none; /* let mouse pass through except on children */
  z-index: 1000;
}

.tooltip dt {
  font-weight: bold;
  margin-top: 5px;
}

.tooltip dd {
  margin-left: 10px;
}
/* circle hover scaling */
circle {
  transition: 200ms transform;
  pointer-events: all;
  transform-origin: center;
  transform-box: fill-box;
  @starting-style {
    r: 0;
  }
}

circle:hover {
  transform: scale(1.5);
  cursor: pointer;
}
@keyframes marching-ants {
  to {
    stroke-dashoffset: -8; /* 5 + 3 */
  }
}

.selection {
  fill-opacity: 0.1;
  stroke: black;
  stroke-opacity: 0.7;
  stroke-dasharray: 5 3;
  animation: marching-ants 2s linear infinite;
}
circle.selected {
  fill: #ff6b6b;
}
#language-breakdown {
  display: grid;
  grid-auto-flow: column;
  grid-template-rows: auto auto auto; /* 3 rows: name, count, percent */
  gap: 0.25rem 1.5rem;                 /* vertical then horizontal gap */
  text-align: center;
  margin-top: 1.5rem;
}
/* language name */
#language-breakdown dt {
  font-size: 1rem;
  font-weight: 600;
  color: #333;
}

#language-breakdown > *:nth-child(3n+1) {
  font-weight: 600;
  font-size: 1.6rem;
  color: #333;
}

/* 2nd item = "{count} lines" */
#language-breakdown > *:nth-child(3n+2) {
  font-size: 1.6rem;
  font-weight: 600;
  color: #2c3e50;
}

/* 3rd item = "(percentage)" */
#language-breakdown > *:nth-child(3n+3) {
  font-size: 1.6rem;
  color: #666;
}

.time-filter-label {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
  align-items: center;
  gap: 0.5rem 1rem; /* 0.5rem row-gap, 1rem column-gap */
  width: 100%;
  margin: 1.5rem 0;
}

/* Row 1, col 1: the “Show commits until:” text */
.time-filter-label > span {
  grid-column: 1;
  grid-row: 1;
}

/* Row 1, col 2: the slider */
.time-filter-label > input[type="range"] {
  grid-column: 2;
  grid-row: 1;
  width: 100%;
  max-width: none;
}

/* Row 2, col 2: the time, right-justified */
.time-filter-label > time {
  grid-column: 2;
  grid-row: 2;
  justify-self: end;
  white-space: nowrap;
}


#chart{
  flex: 1;
  align-items: baseline;
  margin-left: auto;
}

/* 1) Make .files a vertical list, one entry per row */
.files {
  display: flex;
  flex-direction: column;
  gap: 1rem;            /* space between each file‐row */
  margin: 1rem 0 2rem;
  padding: 0;
}

/* 2) Each file‐row is a flex container: filename on left, dots on right */
.files > div {
  display: flex;
  align-items: flex-start; /* top-align the dots to the filename */
  gap: 1rem;               /* space between name and dots */
}

/* 3) Style the filename container */
.files dt {
  margin: 0;
  padding: 0;
  font-weight: bold;
}
.files code {
  font-family: monospace;
}

/* 4) Make the dd into a horizontal, wrapping row of dots */
.files dd {
  display: flex;
  flex-wrap: wrap;
  gap: 0.15em;
  margin: 0;
  padding: 0;
}

/* 5) Your dot style remains the same */
.line {
  width: 0.5em;
  aspect-ratio: 1;
  border-radius: 50%;
  /* background-color set from JS */
}

:global(body){
  max-width: min(120ch, 80vw);
}

#scrollytelling {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: subgrid;
}

/* feel free to play with this to make your scrolly more seemless with your plot */
#scroll-container {
  grid-column: 1;
  position: relative;
  width: 95%;
  height: 350px;
  overflow-y: scroll;
  border: 1px solid #ccc;
  margin-bottom: 50px;
}

#chart {
  grid-column: 2;
}

#spacer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background: none; /* transparent */
  pointer-events: none;
}

#items-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

.item {
  height: auto;
  padding: 10px;
  box-sizing: border-box;
  border-bottom: 2px solid #eee;
  white-space: normal;
}

/* Add to style.css */
.item a {
  pointer-events: none; /* Disable clicking */
  cursor: default; /* Show default cursor instead of pointer */
  color: inherit; /* Keep original text color */
  text-decoration: none; /* Remove underline */
}

/* Add to style.css */
.item a {
  pointer-events: none; /* Disable clicking */
  cursor: default; /* Show default cursor instead of pointer */
  color: inherit; /* Keep original text color */
  text-decoration: none; /* Remove underline */
}

.item:hover a {
  color: inherit; /* Use the same red as circles */
  background-color: color-mix(in oklch, var(--color-accent, oklch(70% 10% 250)), canvas 85%);
  border-bottom: 0.2em solid #ff6b6b; /* Vibrant blue accent */
  transition: all 0.2s ease-in-out;
}